!function(){"use strict";const e={inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__form-input-error",errorClass:"modal__form-input-error_active"};class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`.${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e,t){const s=this._form.querySelector(`.${e.id}-error`);s.textContent="",s.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this.enableSubmitButton()}_setEventListeners(){this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class s{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s;const i=document.querySelector(this._cardSelector).content.querySelector(".card");this._cardElement=i.cloneNode(!0),this._heartButton=this._cardElement.querySelector(".card__heart-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title")}_handleLikeIcons(){this._heartButton.classList.toggle("card__heart-button-active")}_handleDeleteButton(){}_setEventListeners(){this._heartButton.addEventListener("click",(()=>{this._handleLikeIcons()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getView(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}}class n{constructor(e){this._modalElement=document.querySelector(e),this._closeButton=this._modalElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._modalElement.addEventListener("click",(e=>{e.target===e.currentTarget&&this.close()}))}}class r extends n{constructor(e,t){super(e),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._modalForm.querySelectorAll(".modal__form-input")}_getInputValues(){return this._inputData={},this._inputList.forEach((e=>{this._inputData[e.name]=e.value})),this._inputData}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}document.querySelector(".cards__list");const i=document.querySelector("#profile-modal"),a=document.forms["edit-profile-form"],o=document.querySelector("#add-card-modal"),l=document.forms["add-card-form"],c=document.forms["avatar-form"],d=(document.querySelector("#avatar-modal"),document.querySelector(".profile__add-button")),h=(o.querySelector(".modal__button"),document.querySelector(".profile__edit-button")),u=i.querySelector(".modal__button"),_=c.querySelector(".modal__button"),m=document.querySelector(".profile__avatar"),p=document.querySelector(".profile__title"),E=document.querySelector(".profile__description"),f=document.querySelector(".profile__avatar"),v=i.querySelector("#profile-title-input"),b=i.querySelector("#profile-description-input"),S=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse).then((e=>e))}editUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse).then((e=>e))}editUserAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse).then((e=>e))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse).then((e=>e))}addNewCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.link})}).then(this._checkResponse).then((e=>e))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse).then((e=>e))}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse).then((e=>e))}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse).then((e=>e))}getInitialData(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"71ef8ca1-b8c8-47e5-8d73-d71542ab18e9","Content-Type":"application/json"}}),g=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:k},".cards__list");function k(e){const t=new s(e,"#card-template",y).getView();g.addItem(t)}function y(e){q.open(e)}function L(){return S.getUserInfo().then((e=>{C.setUserInfo(e.name,e.about,e.avatar)}))}g.renderItems(),L();const C=new class{constructor(e,t,s){this._titleElement=e,this._descriptionElement=t,this._avatarElement=s}getUserInfo(){return{title:this._titleElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e,t,s){this._avatarElement.src=s,this._titleElement.textContent=e,this._descriptionElement.textContent=t}}(p,E,f);m.addEventListener("click",(()=>{x.open()})),h.addEventListener("click",(()=>{const e=C.getUserInfo();v.value=e.title,b.value=e.description,w.resetValidation(),j.open()})),d.addEventListener("click",(()=>{U.open()}));const I=new t(e,l),w=new t(e,a),B=new t(e,c);I.enableValidation(),w.enableValidation(),B.enableValidation();const q=new class extends n{constructor(e){super(e),this._imageEl=this._modalElement.querySelector(".modal__image"),this._titleEl=this._modalElement.querySelector(".modal__image-title")}open(e){this._imageEl.src=e.link,this._imageEl.alt=e.name,this._titleEl.textContent=e.name,super.open()}}("#image-modal");q.setEventListeners();const U=new r("#add-card-modal",(function(e){k({name:e.title,link:e["Image URL"]}),U.close(),l.reset(),I.disableSubmitButton()}));U.setEventListeners();const j=new r("#profile-modal",(function(e){u.textContent="Saving...";const t=e.title,s=e.description;S.editUserInfo(t,s).then((()=>{L(),j.close(),u.textContent="Save"}))}));j.setEventListeners(),new r("#delete-card-modal").setEventListeners();const x=new r("#avatar-modal",(function(e){_.textContent="Saving...";const t=e["avatar URL"];S.editUserAvatar(t),setTimeout((()=>{L(),x.close(),_.textContent="Save"}),1e3)}));x.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,