!function(){"use strict";const t={inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__form-input-error",errorClass:"modal__form-input-error_active"};class e{constructor(t,e){this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._form=e,this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(t){const e=this._form.querySelector(`.${t.id}-error`);e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t,e){const s=this._form.querySelector(`.${t.id}-error`);s.textContent="",s.classList.remove(this._errorClass)}_checkInputValidity(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}_hasInvalidInput(){return!this._inputEls.every((t=>t.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this.enableSubmitButton()}_setEventListeners(){this._inputEls.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((t=>{this._hideInputError(t)}))}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}}class s{constructor(t,e,s){let{name:n,link:i}=t;this._name=n,this._link=i,this._cardSelector=e,this._handleImageClick=s;const o=document.querySelector(this._cardSelector).content.querySelector(".card");this._cardElement=o.cloneNode(!0),this._heartButton=this._cardElement.querySelector(".card__heart-button"),this._deleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardTitle=this._cardElement.querySelector(".card__title")}_handleLikeIcons(){this._heartButton.classList.toggle("card__heart-button-active")}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){this._heartButton.addEventListener("click",(()=>{this._handleLikeIcons()})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}getView(){return this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._cardElement}}class n{constructor(t){this._modalElement=document.querySelector(t),this._closeButton=this._modalElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()})),this._modalElement.addEventListener("click",(t=>{t.target===t.currentTarget&&this.close()}))}}class i extends n{constructor(t,e){super(t),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputList=this._modalForm.querySelectorAll(".modal__form-input")}_getInputValues(){return this._inputData={},this._inputList.forEach((t=>{this._inputData[t.name]=t.value})),this._inputData}setEventListeners(){this._modalForm.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}document.querySelector(".cards__list");const o=document.querySelector("#profile-modal"),r=document.forms["edit-profile-form"],a=(document.querySelector("#add-card-modal"),document.forms["add-card-form"]),l=document.querySelector(".profile__add-button"),c=document.querySelector(".profile__edit-button"),d=document.querySelector(".profile__title"),u=document.querySelector(".profile__description"),m=o.querySelector("#profile-title-input"),_=o.querySelector("#profile-description-input"),h=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>{this._renderer(t)}))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:p},".cards__list");function p(t){const e=new s(t,"#card-template",E).getView();h.addItem(e)}function E(t){g.open(t)}h.renderItems();const v=new class{constructor(t,e){this._titleElement=t,this._descriptionElement=e}getUserInfo(){return{title:this._titleElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(t,e){this._titleElement.textContent=t,this._descriptionElement.textContent=e}}(d,u);c.addEventListener("click",(()=>{const t=v.getUserInfo();m.value=t.title,_.value=t.description,S.resetValidation(),L.open()})),l.addEventListener("click",(()=>{b.open()}));const f=new e(t,a),S=new e(t,r);f.enableValidation(),S.enableValidation();const g=new class extends n{constructor(t){super(t),this._imageEl=this._modalElement.querySelector(".modal__image"),this._titleEl=this._modalElement.querySelector(".modal__image-title")}open(t){this._imageEl.src=t.link,this._imageEl.alt=t.name,this._titleEl.textContent=t.name,super.open()}}("#image-modal");g.setEventListeners();const b=new i("#add-card-modal",(function(t){p({name:t.title,link:t["Image URL"]}),b.close(),a.reset(),f.disableSubmitButton()}));b.setEventListeners();const L=new i("#profile-modal",(function(t){const e=t.title,s=t.description;v.setUserInfo(e,s),L.close()}));L.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,